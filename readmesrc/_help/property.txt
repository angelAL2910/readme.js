*プロパティマニュアル[#20101208164429]
**プロパティマニュアルの凡例[#20101208164748]
プロパティマニュアルは以下の形式で記述されています。

***プロパティ名[#20101208164849]

:種別|プロパティがどこで指定が可能であるかを示します。複数箇所で指定が可能であるプロパティも存在します。
:|全体 － Readmeクラスコンストラクタの引数オブジェクトで指定でき、ページ全体に対して設定が可能である事を示します。
:|各ページ － Readmeクラスコンストラクタの引数オブジェクト.pageプロパティ内の、各フォルダオブジェクトにおいて指定でき、各ページ個別に設定が可能である事を示します。 
:|全体と各ページの両方で指定した場合、各ページの指定が優先されます。
:書式|プロパティの指定方法です。
:概要|プロパティの機能概要です。
:詳細|プロパティの詳細な説明です。
:備考|プロパティに関する参考情報です。

**プロパティマニュアル[#20101208185133]

***button[#20101208172400]
:種別|全体
:書式|button:{"'''リンク名'''":"'''アドレス'''" , ...}
:概要|ページ上部に表示するリンクを設定します。
:詳細|プロパティ名がリンク名となり、クリックすると値に指定したアドレスを別ウィンドウで表示します。
:|通常、記述された順にページ上部のリンクとして表示されます。([[後述>#20101209123655]]参照)
:備考|値のアドレスはJavaScriptの文字列となるため、\は\\にエスケープする必要があります。
:|ネットワーク上のファイルを指定する場合、file://から始まるアドレスになる場合がありますが、Firefoxの場合はfile://///から始まる必要があります。
:|値には関数を指定することもできます。

***date[#20101208172221]
:種別|全体, 各ページ
:書式|date:"'''日付'''"
:概要|タイトル下の日付表示部に表示する文字列を指定します。
:備考|日付としてではなく、サブタイトルとして使用することも可能です。

***imgDir[#20101208171707]
:種別|全体, 各ページ
:書式|imgDir:"'''イメージファイルディレクトリパス'''"
:概要|イメージファイルディレクトリのパスを指定します。
:詳細|デフォルトはimgです。

***isAjax[#20101208171829]
:種別|全体
:書式|isAjax:true '''or''' false
:概要|プルダウンによるページ切り替え時等で全体を再読み込みするかを指定します。
:詳細|trueを指定すると、ページ切り替え時に全体を再読み込みしません。この場合、切り替えは高速になりますが、ブラウザの戻るボタンは機能しなくなります。
:|falseを指定すると、ページ切り替え時に全体を再読み込みします。この場合、切り替えは遅くなりますが、ブラウザの戻るボタンは機能するようになります。
:|デフォルトはtrueです。

***isDiary[#20101208171820]
:種別|全体, 各ページ
:書式|isDiary:true '''or''' false
:概要|日記形式であるかを指定します。
:詳細|trueを指定すると日記形式となります。デフォルトはfalseです。
:備考|日記形式はいくつかの点で特殊な動作となります。[[日記形式について>#20101209130738]]参照。

***isHeadListNumber[#20101208171914]
:種別|全体, 各ページ
:書式|isHeadListNumber:true '''or''' false
:概要|各見出しの先頭に英数字を付加するかを指定します。
:詳細|trueを指定すると、各見出しの先頭に順番を示す英数字が付加されます。
:|falseを指定すると、付加されません。
:|デフォルトはtrueです。

***isHTML[#20101208171855]
:種別|全体, 各ページ
:書式|isHTML:true '''or''' false
:概要|ソースファイルの内容をHTMLの断片とみなすかを指定します。
:詳細|trueを指定すると、ソースファイルの内容を変換せずにそのまま出力します。
:|ただし、その場合でも、先頭に大見出しを記述する必要があります。
:|デフォルトはfalseです。
:備考|各ファイル個別に指定したい場合は、ファイル名の末尾を.htm.txt((.txtはsuffixプロパティで指定された拡張子))とします。こうすることでそのファイルをHTMLの断片とみなすようになります。

***isRefFromSrc[#20101208171846]
:種別|全体, 各ページ
:書式|isRefFromSrc:true '''or''' false
:概要|添付ファイル・画像の貼り付け・リンクの対象をソースファイルディレクトリを基準として配置するかを指定します。
:詳細|trueを指定すると、#ref、&refによる添付ファイル・画像の貼り付け・リンクの対象を、ソースファイルディレクトリを基準に配置しているとみなします。
:|falseを指定すると、htmファイルのディレクトリを基準に配置しているとみなします。
:|デフォルトはfalseです。

***name[#20101208172207]
:種別|各ページ
:書式|name:"'''プルダウン表示用ページ名'''"
:概要|ページ右上プルダウンに表示するページ名を指定します。
:備考|指定がない場合、titleプロパティ(各ページ)の値が使用され、その指定もなければディレクトリ名が使用されます。

***page[#20101208172248]
:種別|全体
:書式|page:{'''ディレクトリ名''':'''ページオブジェクト''', ...}
:概要|ページ全体を構成するページオブジェクトを設定します。
:詳細|ページオブジェクトは、このプロパティマニュアルで各ページで指定可能としているプロパティをもつオブジェクトです。(srcプロパティは必須)
:|通常、記述された順にページ右上のプルダウン内に表示されます。([[後述>#20101209123655]]参照)
:|topPageプロパティやクエリパラメーターによるデフォルトページの指定がない場合は、初期には先頭に記述されたページが表示されます。
:|指定必須です。

***src[#20101208172238]
:種別|各ページ
:書式|src:["'''ファイル名'''", ...]
:概要|ページのソースファイル名を指定します。
:詳細|srcDirプロパティで指定されたディレクトリ以下にある、表示したいファイルをその順に文字列配列として指定します。
:|指定するファイル名からは、suffixプロパティで指定されている拡張子は取り除くものとします。
:|指定必須です。

***srcDir[#20101208170006]
:種別|全体, 各ページ
:書式|srcDir:"'''ソースファイルディレクトリパス'''"
:概要|ソースファイルディレクトリのパスを指定します。
:詳細|デフォルトはreadmesrcです。

***suffix[#20101208171652]
:種別|全体, 各ページ
:書式|suffix:"'''ソースファイル拡張子'''"
:概要|ソースファイルの拡張子を指定します。
:詳細|デフォルトは.txtです。

***terop[#20101208171906]
:種別|全体, 各ページ
:書式|terop:["'''表示文字列'''", ...]
:概要|ページ最上部に表示するテロップ文字列を指定します。
:詳細|文字列配列を指定することで、その各要素を順にページ最上部にテロップとして表示します。
:|指定しない場合はテロップは表示されません。
:備考|要素を以下のように記述することで、予定時刻までの残り時間表示が追加されます。
:|T("2010/11/25 17:00", "インフルエンザ予防接種")

***title[#20101208172130]
:種別|全体, 各ページ
:書式|title:"'''タイトル'''"
:概要|ページ先頭のタイトル部に表示する文字列を指定します。
:備考|全体, 各ページ共に指定がない場合、nameプロパティの値が使用され、その指定もなければディレクトリ名が使用されます。

***topPage[#20101208171759]
:種別|全体
:書式|topPage:"'''トップページ名'''"
:概要|トップページ名を指定します。
:詳細|初期表示時に表示するページをフォルダ名で指定します。
:備考|クエリパラメーターでデフォルトページが指定されている場合はそちらが優先されます。


**オブジェクトプロパティの追加順とfor-inループの処理順について[#20101209123655]
ここでは、JavaScript上でオブジェクトにプロパティが追加された順と、for-inループでプロパティが処理される順が同一であることを前提としていますが、ECMAScriptの規約上、この二つに相関関係はありません。
実際、IEおよびFirefoxではこの二つの順は同一であり問題ありませんが、Operaでは同一にならない場合があります。具体的には、プロパティ名に自然数とみなせるものがある場合、これが優先的に、昇順に処理されます。
厳密には、この二つの順が同一であることを前提としたプログラミングはするべきではありませんが、実装および使用の負荷を勘案して、このままとしています。

